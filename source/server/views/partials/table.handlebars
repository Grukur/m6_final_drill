{{!-- Formulario para la creacion de registros en anime --}}
<h1 class="my-2 text-center">App de anime kwaii</h1>

<div class="text-center">
    <button type="submit" id="formShow" class="btn btn-primary my-2 d-block m-auto">Crear</button>
</div>

<section>
    <table class="table">
        <thead class="text-center">
            <tr class="table-dark">
                <th scope="col">Index</th>
                <th class="text-start" scope="col">Nombre</th>
                <th scope="col">Genero</th>
                <th scope="col">año</th>
                <th scope="col">Autor</th>
                <th scope="col">Detalles</th>
                <th scope="col">Actualizar</th>
                <th scope="col">Eliminar</th>
            </tr>
        </thead>
        <tbody>
            {{#each data}}
            <tr class="fw-bold text-center">
                <th scope="row" class="bgOwn text-light fw-bold">{{this.id}}</th>
                <td class="bgOwn text-light text-start">{{this.nombre}}</td>
                <td class="bgOwn text-light">{{this.genero}}</td>
                <td class="bgOwn text-light">{{this.año}}</td>
                <td class="bgOwn text-light">{{this.autor}}</td>
                <td class="bgOwn text-light"><a class="btn btn-success detailBtn" href="/anime/{{this.id}}">Detalles</a></td>
                <td class="bgOwn text-light"><a class="btn btn-warning updateBtn">Actualizar</a></td>
                <td class="bgOwn text-light"><button class="btn btn-danger deleteBtn">Eliminar</button></td>
            </tr>
            {{/each}}
        </tbody>
    </table>
</section>

<script>
    //Query selectors para almacenar los grupos de botones
    const updateBtn = document.querySelectorAll(".updateBtn");
    const deleteBtn = document.querySelectorAll(".deleteBtn");
    const detailBtn = document.querySelectorAll(".detailBtn");

    //Variable donde se guarda el id capturado por los botones delete, actualizar y detalles
    let id;

    //Muestra el formulario y oculta botones
    formShow.addEventListener('click', () => {
        form.classList.replace("d-none", "d-block");
        formShow.classList.replace("d-block", "d-none");
        updateform.classList.replace("d-block", "d-none");
        createForm.classList.replace("d-none", "d-block");
        formCreateUser.reset()

    })

    // capturamos todos los botones actualizar y capturamos la data de su fila
    for (let i = 0; i < updateBtn.length; i++) {
        updateBtn[i].addEventListener("click", (event) => {

            form.classList.replace("d-none", "d-block");
            createForm.classList.replace("d-block", "d-none");
            updateform.classList.replace("d-none", "d-block");
            formShow.classList.replace("d-none", "d-block");

            let path = event.srcElement.offsetParent.nextSibling.parentElement.cells

            id = path[0].innerText;
            createNombre.value = path[1].innerText;
            createGenero.value = path[2].innerText;
            createAño.value = path[3].innerText;
            createAutor.value = path[4].innerText;
        });
    }

    // capturamos todos los botones eliminar y eliminamos el valor correspondiente
    for (let i = 0; i < deleteBtn.length; i++) {
        deleteBtn[i].addEventListener("click", (event) => {

            let path = event.srcElement.offsetParent.nextSibling.parentElement.cells
            let id = path[0].innerText;

            var requestOptions = {
                method: 'DELETE',
                redirect: 'follow'
            };

            fetch("http://localhost:3000/animes/" + id, requestOptions)
                .then(response => response.json())
                .then(result => console.log(result))
                .catch(error => console.log('error', error));
            location.reload();
        });
    }

    // capturamos todos los botones para ver Detalles
    for (let i = 0; i < detailBtn.length; i++) {
        detailBtn[i].addEventListener("click", (event) => {
            console.log('hola detalle')

            let path = event.srcElement.offsetParent.nextSibling.parentElement.cells
            let id = path[0].innerText;

            var requestOptions = {
                method: 'GET',
                redirect: 'follow'
            };

            fetch(`http://localhost:3000/anime/${id}`, requestOptions)
                .then(response => response.json())
                .then(result => console.log(result))
                .catch(error => console.log('error', error));
        });
    }
</script>

